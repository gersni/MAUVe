"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class servo(object):
    __slots__ = ["duty", "angle", "timestamp"]

    __typenames__ = ["double", "double", "string"]

    __dimensions__ = [None, None, None]

    def __init__(self):
        self.duty = 0.0
        self.angle = 0.0
        self.timestamp = ""

    def encode(self):
        buf = BytesIO()
        buf.write(servo._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">dd", self.duty, self.angle))
        __timestamp_encoded = self.timestamp.encode('utf-8')
        buf.write(struct.pack('>I', len(__timestamp_encoded)+1))
        buf.write(__timestamp_encoded)
        buf.write(b"\0")

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != servo._get_packed_fingerprint():
            raise ValueError("Decode error")
        return servo._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = servo()
        self.duty, self.angle = struct.unpack(">dd", buf.read(16))
        __timestamp_len = struct.unpack('>I', buf.read(4))[0]
        self.timestamp = buf.read(__timestamp_len)[:-1].decode('utf-8', 'replace')
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if servo in parents: return 0
        tmphash = (0x605836262f947b5e) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if servo._packed_fingerprint is None:
            servo._packed_fingerprint = struct.pack(">Q", servo._get_hash_recursive([]))
        return servo._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

